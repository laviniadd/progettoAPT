<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.myproject.app</groupId>
	<artifactId>progetto</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>progetto</name>
	<url>http://maven.apache.org</url>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- Properties for mysql database docker container -->
		<docker.image.mysql>mysql:8</docker.image.mysql>
		<docker.image.mysql.database>dbProgetto</docker.image.mysql.database>
		<docker.image.mysql.root.password>root</docker.image.mysql.root.password>
		<docker.image.mysql.user>root</docker.image.mysql.user>
		<docker.image.mysql.password>root</docker.image.mysql.password>
		<docker.image.mysql.portmapping>3306:3306</docker.image.mysql.portmapping>

	</properties>

	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.12</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>1.9.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hsqldb</groupId>
			<artifactId>hsqldb</artifactId>
			<version>2.4.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>5.2.6.Final</version>
		</dependency>

		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>8.0.17</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.13.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-testing</artifactId>
			<version>5.2.2.Final</version>
		</dependency>
		<dependency>
			<groupId>org.pitest</groupId>
			<artifactId>pitest-parent</artifactId>
			<version>1.4.10</version>
			<type>pom</type>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>add-integration-test-resource</id>
						<phase>generate-test-resources</phase>
						<goals>
							<goal>add-test-resource</goal>
						</goals>
						<configuration>
							<resources>
								<resource>
									<directory>src/it/resources</directory>
								</resource>
							</resources>
						</configuration>
					</execution>
					<execution>
						<id>add-integration-test-source</id>
						<phase>generate-test-sources</phase>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/it/java</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>2.22.1</version>
				<executions>
					<execution>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.3</version>
				<configuration>
					<excludes>
						<exclude>**/App.*</exclude>
						<exclude>com/myproject/app/model/**/*</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<goals>
							<!-- binds by default to the phase "initialize" -->
							<goal>prepare-agent</goal>
							<!-- binds by default to the phase "verify" -->
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.eluder.coveralls</groupId>
				<artifactId>coveralls-maven-plugin</artifactId>
				<version>4.3.0</version>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.4.10</version>
				<configuration>
					<targetClasses>
						<param>com.myproject.app.dao.*</param>
					</targetClasses>
					<targetTests>
						<param>com.myproject.app.dao.*</param>
					</targetTests>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>jacoco</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>docker</id>
			 <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
			<build>
				<plugins>
					<plugin>
						<groupId>io.fabric8</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>0.27.2</version>
						<configuration>
						<dockerHost>tcp://192.168.99.100:2376</dockerHost>
							<verbose>true</verbose>
							<showLogs>true</showLogs>
							<image>
								<name>${docker.image.mysql}</name>
								 <alias>local-mysql-database</alias>
								<run>
									<env>
										<MYSQL_ROOT_PASSWORD>${docker.image.mysql.root.password}</MYSQL_ROOT_PASSWORD>
										<MYSQL_DATABASE>${docker.image.mysql.database}</MYSQL_DATABASE>
										<MYSQL_USER>${docker.image.mysql.user}</MYSQL_USER>
										<MYSQL_PASSWORD>${docker.image.mysql.password}</MYSQL_PASSWORD>
									</env>
									<ports>
										<port>${docker.image.mysql.portmapping}</port>
									</ports>
									<wait>
										<log>MySQL init process done. Ready for start up.</log>
										<time>8000</time>
									</wait>
								</run>
							</image>
 							<certPath>C:\Users\Lavinia\.docker\machine\machines\default</certPath>
						</configuration>
						 <executions>
                            <execution>
                                <id>container-start</id>
                                <phase>pre-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                    <goal>start</goal>
                                </goals>
                            </execution>
                            <execution>
                                <id>container-stop</id>
                                <phase>post-integration-test</phase>
                                <goals>
                                    <goal>stop</goal>
                                </goals>
                            </execution>
                        </executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>
</project>